# ParrotOS docker container launcher
parrot() {
	podman run --rm -it --network host -v $PWD:/work $@ docker.io/parrotsec/security:latest
}

# ParrotOS VM
parrotvm() {
	SSHPORT=5555
	CORES=4
	MEMORY=2G
	for param in "$@"; do
		if [ "$param" -eq "SSHPORT" ]; then SSHPORT=0; elif [ "$SSHPORT" -eq 0 ]; then SSHPORT=$param && echo "SSH port:\t\t$param"; fi
		if [ "$param" -eq "CORES" ]; then CORES=0; elif [ "$CORES" -eq 0 ]; then CORES=$param && echo "Number of cores set to:\t$param"; fi
		if [ "$param" -eq "MEMORY" ]; then MEMORY=0; elif [ "$MEMORY" -eq 0 ]; then MEMORY=$param && echo "Memory size set to:\t$param"; fi
	done
	qemu-system-x86_64 -enable-kvm -boot menu=on -drive file=~/VM/parrot.img -m $MEMORY -cpu host -smp $CORES -net user,hostfwd=tcp::$SSHPORT-:22 -net nic -vga virtio -display sdl,gl=on &
}

# Google's Android container launcher
androidemulator() {
	echo "Launching container..."
	docker run --detach --rm -e ADBKEY="$(cat ~/.android/adbkey)" --device /dev/kvm --publish 8554:8554/tcp --publish 5555:5555/tcp us-docker.pkg.dev/android-emulator-268719/images/30-google-x64:30.1.2
	adb connect localhost:5555
	adb wait-for-device
	echo "ADB connected!"
	echo "Downloading Frida server"
	wget https://github.com/frida/frida/releases/download/17.2.14/frida-server-17.2.14-android-x86_64.xz -O /tmp/frida-server.xz
	echo "Unzipping Frida"
	7z x -o/tmp /tmp/frida-server.xz
	echo "Running Frida server"
	adb push /tmp/frida-server /data/local/tmp/
	adb shell chmod +x /data/local/tmp/frida-server
	adb shell /data/local/tmp/frida-server -D &
	echo "Frida server started!"
}
